<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--Here should be the interface path-->
<mapper namespace="pers.xiaoming.springboot.ssm.dao.IStudentDao">

    <!--System will read the Class name from the typeAliases and use the Class name as Alias-->
    <!--<insert id="insertStudent" parameterType="Student">-->
    <insert id="create">
        insert into t_student(t_name, t_score) values (#{name},#{score})
        <!--key property is the key in Java Class not in db-->
        <selectKey resultType="int" keyProperty="id" order="AFTER">
            select @@identity
        </selectKey>
    </insert>

    <delete id="delete">
        <!--# is just a placeholder, any name inside is ok-->
        delete from t_student where t_id=#{id}
    </delete>

    <update id="update">
        update t_student set t_name=#{name}, t_score=#{score} where t_id=#{id}
    </update>



    <select id="get" resultMap="StudentMapper">
        <!--Two ways to solve DB table attribute names different from Java Class field names-->
        <!--1. using alias like the comment line-->
        <!--select t_id id,t_name name,t_score score from t_student where t_id=#{id}-->

        <!--2. using resultMap-->
        select t_id id,t_name name,t_score score from t_student where t_id=#{id}
    </select>

    <resultMap id="StudentMapper" type="pers.xiaoming.springboot.ssm.entity.Student">
        <id column="t_id" property="id"/>
        <result column="t_name" property="name"/>
        <result column="t_score" property="score"/>
    </resultMap>

</mapper>